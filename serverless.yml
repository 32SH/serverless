service: cloudsystems-serverless
plugins:
  - serverless-offline
  - serverless-step-functions
  - serverless-pseudo-parameters
provider:
  name: aws
  runtime: nodejs6.10
  region: eu-west-1
  environment:
    SENDER_EMAIL: ${env:SENDER_EMAIL}
    CONTACT_EMAIL: ${env:CONTACT_EMAIL}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - ses:SendEmail
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - states:StartExecution
      Resource: '*'
functions:
  contactUs:
    handler: handler.contactUs
    events:
      - http:
          path: contact-us
          method: post
          cors: true
  apply:
    handler: handler.apply
    events:
      - http:
          path: apply
          method: post
          cors: true
    environment:
      AFTER_TRAINEE_APPLIES_STATE_MACHINE_ARN: "arn:aws:states:#{AWS::Region}:#{AWS::AccountId}:stateMachine:afterTraineeAppliesStateMachine"
  notifyContributorsWhenTraineeApplies:
    handler: handler.notifyContributorsWhenTraineeApplies
  notifyWhenVotesCalculated:
    handler: handler.notifyWhenVotesCalculated

stepFunctions:
  stateMachines:
    afterTraineeAppliesStateMachine:
      name: afterTraineeAppliesStateMachine
      definition:
        Comment: "A state machine happens after a trainee applies."
        StartAt: notifyContributorsWhenTraineeApplies
        States:
          notifyContributorsWhenTraineeApplies:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-notifyContributorsWhenTraineeApplies"
            Next: waitForPeriodOfTime
          waitForPeriodOfTime:
            Type: Wait
            Seconds: 10
            Next: notifyWhenVotesCalculated
          notifyWhenVotesCalculated:
            Type: Task
            Resource: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${opt:stage}-notifyWhenVotesCalculated"
            End: true

  # test:
  #   handler: handler.test
  #   events:
  #     - http:
  #         path: test
  #         method: get
  #         cors: true
resources:
  Resources:
    TraineesDynamoDBTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: trainees
    ContributorsDynamoDBTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: contributors
